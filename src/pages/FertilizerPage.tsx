import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";

// type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢
interface FertilizerHistory {
  id: number;
  fertilizer_type: string;
  amount: number;
  price: number;
  date: string;
  note: string;
  created_at: string;
}

export default function FertilizerPage() {
  const [form, setForm] = useState({
    fertilizer_type: "‡∏™‡∏π‡∏ï‡∏£ 15-15-15",
    amount: 30,
    price: 20,
    date: "",
    note: "",
  });

  const [history, setHistory] = useState<FertilizerHistory[]>([]);
  const navigate = useNavigate();

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å localStorage ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  useEffect(() => {
    const saved = localStorage.getItem("fertilizerHistory");
    if (saved) {
      setHistory(JSON.parse(saved));
    }
  }, []);

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
  const handleSave = () => {
    if (!form.date) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà");

    const newEntry: FertilizerHistory = {
      id: Date.now(),
      fertilizer_type: form.fertilizer_type,
      amount: form.amount,
      price: form.price,
      date: form.date,
      note: form.note,
      created_at: new Date().toLocaleString("th-TH"),
    };

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state
    const updated = [newEntry, ...history];
    setHistory(updated);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï localStorage ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    localStorage.setItem("fertilizerHistory", JSON.stringify(updated));

    alert(
      `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏° ${(form.amount * form.price).toLocaleString()} ‡∏ö‡∏≤‡∏ó)`
    );
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö
  const handleDelete = (id: number) => {
    if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ?")) return;
    const updated = history.filter((item) => item.id !== id);
    setHistory(updated);
    localStorage.setItem("fertilizerHistory", JSON.stringify(updated));
  };

  return (
    <div className="min-h-screen bg-[#F4F6EF] text-gray-800 p-6 space-y-6">
      <div className="flex justify-between items-center">
        <select className="border border-gray-300 px-4 py-2 rounded-lg shadow text-sm">
          <option>‡πÅ‡∏õ‡∏•‡∏á 1 - ‡πÇ‡∏ã‡∏ô‡πÄ‡∏´‡∏ô‡∏∑‡∏≠</option>
        </select>
      </div>

      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏õ‡∏∏‡πã‡∏¢ */}
      <div className="bg-[#FBF8F4] border border-[#E3D9CA] rounded-2xl shadow p-6">
        <h2 className="font-semibold mb-4">‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢</h2>
        <div className="grid md:grid-cols-2 gap-4 mb-4">
          <div>
            <label className="block text-sm mb-1">‡∏ä‡∏ô‡∏¥‡∏î‡∏õ‡∏∏‡πã‡∏¢</label>
            <select
              className="w-full border border-gray-300 px-3 py-2 rounded-lg text-sm"
              value={form.fertilizer_type}
              onChange={(e) =>
                setForm({ ...form, fertilizer_type: e.target.value })
              }
            >
              <option>‡∏™‡∏π‡∏ï‡∏£ 15-15-15</option>
              <option>‡∏™‡∏π‡∏ï‡∏£ 16-20-0</option>
              <option>‡∏¢‡∏π‡πÄ‡∏£‡∏µ‡∏¢</option>
            </select>
          </div>

          <div>
            <label className="block text-sm mb-1">‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì (‡∏Å‡∏Å.)</label>
            <input
              type="number"
              className="w-full border border-gray-300 px-3 py-2 rounded-lg text-sm"
              value={form.amount}
              onChange={(e) =>
                setForm({ ...form, amount: Number(e.target.value) })
              }
            />
          </div>

          <div>
            <label className="block text-sm mb-1">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏∏‡πã‡∏¢ (‡∏ö‡∏≤‡∏ó/‡∏Å‡∏Å.)</label>
            <input
              type="number"
              className="w-full border border-gray-300 px-3 py-2 rounded-lg text-sm"
              value={form.price}
              onChange={(e) =>
                setForm({ ...form, price: Number(e.target.value) })
              }
            />
          </div>

          <div>
            <label className="block text-sm mb-1">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πã‡∏¢</label>
            <input
              type="date"
              className="w-full border border-gray-300 px-3 py-2 rounded-lg text-sm"
              value={form.date}
              onChange={(e) => setForm({ ...form, date: e.target.value })}
            />
          </div>

          <div className="md:col-span-2">
            <label className="block text-sm mb-1">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</label>
            <input
              type="text"
              className="w-full border border-gray-300 px-3 py-2 rounded-lg text-sm"
              value={form.note}
              onChange={(e) => setForm({ ...form, note: e.target.value })}
            />
          </div>
        </div>

        <div className="bg-green-50 border border-green-200 rounded-lg p-3 text-sm mb-4">
          üí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°:{" "}
          <strong className="text-green-700">
            {(form.amount * form.price).toLocaleString()} ‡∏ö‡∏≤‡∏ó
          </strong>
        </div>

        <button
          onClick={handleSave}
          className="w-full py-2 rounded-xl text-white font-medium flex items-center justify-center shadow-md"
          style={{
            background: "linear-gradient(90deg, #5E7E3E 0%, #B5925A 100%)",
            boxShadow: "0px 2px 5px rgba(0, 0, 0, 0.1)",
          }}
        >
          <span className="mr-2 text-lg">üßÆ</span> ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </div>

      {/* ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ */}
      <div className="bg-[#E6F1E7] rounded-2xl shadow p-4 border border-[#C5D8C5]">
        <h2 className="font-semibold mb-4">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πã‡∏¢</h2>
        <table className="w-full text-sm">
          <thead>
            <tr className="text-left text-gray-600 border-b border-gray-300">
              <th className="py-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
              <th>‡∏ä‡∏ô‡∏¥‡∏î‡∏õ‡∏∏‡πã‡∏¢</th>
              <th>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì (‡∏Å‡∏Å.)</th>
              <th>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏Å‡∏Å.</th>
              <th>‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°</th>
              <th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>
              <th>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠</th>
              <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {history.map((item) => (
              <tr
                key={item.id}
                className="border-b border-gray-300 text-gray-700"
              >
                <td className="py-2">{item.date}</td>
                <td>{item.fertilizer_type}</td>
                <td>{item.amount}</td>
                <td>{item.price}</td>
                <td className="text-green-700 font-semibold">
                  {(item.amount * item.price).toLocaleString()}
                </td>
                <td>{item.note}</td>
                <td>{item.created_at}</td>
                <td>
                  <button
                    onClick={() => handleDelete(item.id)}
                    className="px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-xs"
                  >
                    ‡∏•‡∏ö
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
      <div className="flex justify-center mt-6">
        <button
          onClick={() => navigate(-1)}
          className="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-gray-700 shadow"
        >
          ‚¨Ö ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
        </button>
      </div>
    </div>
  );
}
